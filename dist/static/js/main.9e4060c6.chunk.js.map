{"version":3,"sources":["components/layout/SingInLinks.js","store/actions/authActions.js","components/layout/SignOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/projectActions.js","components/projects/CreateProject.js","App.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","profile","className","to","onClick","initials","SignOutLinks","state","console","log","firebase","links","uid","isLoaded","Notifications","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","_props","match","params","data","SignIn","email","password","handleOnChange","e","setState","target","value","handleOnSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","path","exact","component","ProjectDetails","initialState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","firebaseConfig","userProfile","useFirestoreForProfile","reduxFirestore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e4060c6.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nfunction SingInLinks(props) {\r\n    const { profile } = props\r\n    return (\r\n        <ul className='right'>\r\n            <li><NavLink to='/create'>New project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to='/' className='btn btn-floating pink lighten-1'>{profile.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SingInLinks)\r\n","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(\r\n            () => dispatch({ type: 'LOGIN_SUCCESS' })\r\n        ).catch(\r\n            (err) => dispatch({ type: 'LOGIN_ERROR', err })\r\n        );\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCESS' });\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth()\r\n            .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n            .then((resp) => {\r\n                return firestore.collection('users').doc(resp.user.uid).set({\r\n                    firstName: newUser.firstName,\r\n                    lastName: newUser.lastName,\r\n                    initials: newUser.firstName[0] + newUser.lastName[0]\r\n                })\r\n            })\r\n            .then(() => dispatch({ type: 'SIGNUP_SUCESS' }))\r\n            .catch((err) => dispatch({ type: 'SIGNUP_ERROR', err }))\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction SignOutLinks() {\r\n    return (\r\n        <ul className='right'>\r\n            <li><NavLink to='/signin'>Login</NavLink></li>\r\n            <li><NavLink to='/signup'>Register</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignOutLinks\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SingInLinks from './SingInLinks';\r\nimport SignOutLinks from './SignOutLinks';\r\nimport { connect } from 'react-redux'\r\nfunction Navbar(props) {\r\n    const { auth, profile } = props\r\n    const links = auth.uid ? <SingInLinks profile={profile} /> : <SignOutLinks />\r\n    return (\r\n        <div>\r\n            <nav className=\"nav-wrapper grey darken-3\">\r\n                <div className=\"container\">\r\n                    <Link to=\"/\" className=\"brand-logo\">Project-M</Link>\r\n                    {auth.isLoaded && links}\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nfunction Notifications(props) {\r\n    const { notifications } = props;\r\n    return (\r\n        <div>\r\n            <div className=\"section\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">Notifications</span>\r\n                        <ul className=\"notifications\">\r\n                            {notifications && notifications.map(notification =>\r\n                                <li key={notification.id}>\r\n                                    <span className=\"pink-text\">{notification.user}</span> {' - '}\r\n                                    <span>{notification.content}</span>\r\n                                    <div className=\"gray-text note-date\">{moment(notification.time.toDate()).fromNow()}</div>\r\n                                </li>)}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nfunction ProjectSummary({ project }) {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\nfunction ProjectList({ projects }) {\r\n    return (\r\n        <div className='project-list section'>\r\n            {projects && projects.map(project =>\r\n                <Link to={`/project/${project.id}`} key={project.id}>\r\n                    <ProjectSummary project={project} />\r\n                </Link>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList\r\n","import React, { Component } from 'react'\r\nimport Notification from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        const { projects, auth, notifications } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n        return (\r\n            <div className='dashboard container'>\r\n                <div className='row'>\r\n                    <div className='col s12 m6'>\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className='col s12 m5 offset-m1'>\r\n                        <Notification notifications={notifications} />\r\n                    </div>\r\n                </div>\r\n                <div className=''></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nfunction ProjectDetails(props) {\r\n    const { project, auth } = props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    return (\r\n        <div className='container section project-details'>\r\n            <div className='card z-depth-0'>\r\n                <div className='card-content'>\r\n                    <span className='card-title'> {project.title}</span>\r\n                    <p>{project.content}</p>\r\n                </div>\r\n                <div className='card-action grey lighten-4 grey-text'>\r\n                    <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                    <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state, _props) => {\r\n    const { id } = _props.match.params;\r\n    const { projects } = state.firestore.data;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nexport class SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleOnChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props\r\n        if (auth.uid) return <Redirect to=\"/\" />\r\n        return (auth.isLoaded &&\r\n            <div className='container'>\r\n                <form onSubmit={this.handleOnSubmit} className='white'>\r\n                    <h5 className='grey-text text-darken-3'> Sing In</h5>\r\n                    <div className='input-field'>\r\n                        <label htmlFor='email'>Email</label>\r\n                        <input type='email' id='email' onChange={this.handleOnChange} />\r\n                    </div>\r\n                    <div className='input-field'>\r\n                        <label htmlFor='password'>Password</label>\r\n                        <input type='password' id='password' onChange={this.handleOnChange} />\r\n                    </div>\r\n                    <div className='input-field'>\r\n                        <button className='btn pink lighten-1 z-depth-0'>Login</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nexport class SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n    }\r\n\r\n    handleOnChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) return <Redirect to=\"/\" />\r\n        return (auth.isLoaded &&\r\n            <div className='container'>\r\n                <form onSubmit={this.handleOnSubmit} className='white'>\r\n                    <h5 className='grey-text text-darken-3'> Sing Up</h5>\r\n                    <div className='input-field'>\r\n                        <label htmlFor='firstName'>Firs Name</label>\r\n                        <input type='text' id='firstName' onChange={this.handleOnChange} />\r\n                    </div>\r\n                    <div className='input-field'>\r\n                        <label htmlFor='lastName'>Last Name</label>\r\n                        <input type='text' id='lastName' onChange={this.handleOnChange} />\r\n                    </div>\r\n                    <div className='input-field'>\r\n                        <label htmlFor='email'>Email</label>\r\n                        <input type='email' id='email' onChange={this.handleOnChange} />\r\n                    </div>\r\n                    <div className='input-field'>\r\n                        <label htmlFor='password'>Password</label>\r\n                        <input type='password' id='password' onChange={this.handleOnChange} />\r\n                    </div>\r\n                    <div className='input-field'>\r\n                        <button className='btn pink lighten-1 z-depth-0'>Sign Up</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid\r\n        console.log({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId\r\n        })\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err })\r\n        })\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { createProject } from '../../store/actions/projectActions'\r\n\r\nexport class CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: '',\r\n    }\r\n\r\n    handleOnChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n        const { auth } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className='container'>\r\n                <form onSubmit={this.handleOnSubmit} className='white'>\r\n                    <h5 className='grey-text text-darken-3'>Create New Project</h5>\r\n                    <div className='input-field'>\r\n                        <label htmlFor='title'>Title</label>\r\n                        <input type='text' id='title' onChange={this.handleOnChange} />\r\n                    </div>\r\n                    <div className='input-field'>\r\n                        <label htmlFor='content'>Content</label>\r\n                        <textarea id='content' className='materialize-textarea' onChange={this.handleOnChange} ></textarea>\r\n                    </div>\r\n                    <div className='input-field'>\r\n                        <button className='btn pink lighten-1 z-depth-0'>Create</button>\r\n                    </div>\r\n                </form>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport Navbar from './components/layout/Navbar'\r\nimport Dashboard from './components/dashboard/Dashboard'\r\nimport ProjectDetails from './components/projects/ProjectDetails'\r\nimport SignIn from './components/auth/SignIn'\r\nimport SignUp from './components/auth/SignUp'\r\nimport CreateProject from './components/projects/CreateProject'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Dashboard} />\r\n          <Route path='/project/:id' component={ProjectDetails} />\r\n          <Route path='/signin' component={SignIn} />\r\n          <Route path='/signup' component={SignUp} />\r\n          <Route path='/create' component={CreateProject} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const initialState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('Login error');\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            };\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('Login sucess');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n        case 'SIGNOUT_SUCESS':\r\n            console.log('Signout sucess');\r\n            return state;\r\n        case 'SIGNUP_SUCESS':\r\n            console.log('Signup sucess')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('Signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer","const projectReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log(\"Created project :\", action.project)\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log(\"Error create project :\", action.err)\r\n            return state;\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Initializa firebase\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCPiSfCo18acJ3vyfhe7B4WrDniZUOEAOk\",\r\n    authDomain: \"project-m-2aa43.firebaseapp.com\",\r\n    databaseURL: \"https://project-m-2aa43.firebaseio.com\",\r\n    projectId: \"project-m-2aa43\",\r\n    storageBucket: \"project-m-2aa43.appspot.com\",\r\n    messagingSenderId: \"890589343319\",\r\n    appId: \"1:890589343319:web:2a1e0663252abe28713d12\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport rootReducer from './store/reducers/rootReducer'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\r\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\r\nimport firebaseConfig from './config/firebaseConfig'\r\n\r\nconst store = createStore(rootReducer,\r\n    compose(\r\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n        reactReduxFirebase(firebaseConfig, { userProfile: 'users', useFirestoreForProfile: true, }), // redux binding for firebase\r\n        reduxFirestore(firebaseConfig) // redux bindings for firestore\r\n    )\r\n);\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));"],"sourceRoot":""}